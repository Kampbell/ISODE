.TH LIBFTAM 3N "01 Mar 1987"
.\" $Header: /xtel/isode/isode/ftam/RCS/libftam.3n,v 9.0 1992/06/16 12:14:55 isode Rel $
.\"
.\"
.\" $Log: libftam.3n,v $
.\" Revision 9.0  1992/06/16  12:14:55  isode
.\" Release 8.0
.\"
.\" 
.SH NAME
libftam \- File Transfer, Access, and Management library
.SH SYNOPSIS
.B "#include <isode/ftam.h>"
.sp
\fIcc\fR\0...\0\fB\-lftam\fR\0\fB\-lisode\fR
.SH DESCRIPTION
The \fIlibftam\fR library contains a set of routines which implement the File
Transfer, Access and Management (FTAM) protocol.
This manual page describes only high\-level information only;
consult the \fIUser's Manual\fR for the full details on the entire
FTAM interface.
.PP
Supported are:
the no-recovery FTAM-QoS;
the transfer, access, management, and transfer and management service classes;
the kernel, read, write, access, limited file management, enhanced file
management, grouping, and fadu-locking functional units;
and,
the kernel, storage, security, and private attributes groups.
Both initiators and responders are supported.
.SH FILES
.nf
.ta \w'\*(EDisodocuments  'u
\*(EDisodocuments	ISODE documents database
\*(EDisoentities	ISODE entities database
.re
.fi
.SH "SEE ALSO"
isodocuments(5), ftam(1c), ftamd(8c),
.br
\fIThe ISO Development Environment: User's Manual\fR,
.br
ISO 8571:
\fIInformation Processing Systems \-\-
File Transfer, Access, and Management\fR
.SH DIAGNOSTICS
All routines return the manifest constant \fBNOTOK\fR (\-1) on error.
In addition,
those routines which take a pointer to a \fBFTAMindication\fR structure
fill\-in the structure as appropriate.
.SH AUTHOR
Marshall T. Rose
.SH BUGS
Do not confuse ftam\-descriptors with file\-descriptors.
Unlike file\-descriptors which are implemented by the kernel,
ftam\-descriptors do not work across \fIfork\fRs and \fIexec\fRs.
.PP
The grouping functional unit is always required,
even if the file access classes is selected.
.PP
Although the security group is implemented,
access\-control attributes may be read but not changed.
.PP
The number of charging, diagnostic, and content types entries
permitted on a given service primitive is limited to a compile-time constant.
.PP
Contents types are identified solely by document type name;
identification by abstract syntax and/or constrait set name is not supported.
