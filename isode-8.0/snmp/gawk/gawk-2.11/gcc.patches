Return-Path: jch@nr-tech.cit.cornell.edu 
Delivery-Date: Wed, 11 Dec 91 05:41:50 -0800
Return-Path: jch@nr-tech.cit.cornell.edu
Received: from mitchell.cit.cornell.edu by dbc.mtview.ca.us (4.1/3.1.090690)
	id AA24967; Wed, 11 Dec 91 05:41:44 PST
Received: from MITCHELL.CIT.CORNELL.EDU by mitchell.cit.cornell.edu (4.1/1.34/Honig-1.3)
	id AA22006; Wed, 11 Dec 91 08:42:18 EST
Message-Id: <9112111342.AA22006@mitchell.cit.cornell.edu>
To: Marshall Rose <mrose@dbc.mtview.ca.us>
Subject: Gawk 2.11 patches
Reply-To: Jeffrey C Honig <jch@nr-tech.cit.cornell.edu>
Organization: Information Technologies/Network Resources; Cornell University, Ithaca, NY
X-Mailer: MH [version 6.7] MH-E [version 3.7+]
Date: Wed, 11 Dec 91 08:42:17 -0500
From: Jeffrey C Honig <jch@nr-tech.cit.cornell.edu>

I had to make the following changes to gawk 2.11 to get it to compile
with gcc.  Then I recompiled it with cc because of the structure
passing incompatibilities.

Jeff


*** :awk.h	Sat Aug 31 23:04:41 1991
--- awk.h	Sat Dec  7 14:45:25 1991
***************
*** 63,69 ****
  
  #ifdef __STDC__
  extern char *malloc(unsigned), *realloc(void *, unsigned);
! extern void free(char *);
  extern char *getenv(char *);
  
  extern char *strcpy(char *, char *), *strcat(char *, char *), *strncpy(char *, char *, int);
--- 63,69 ----
  
  #ifdef __STDC__
  extern char *malloc(unsigned), *realloc(void *, unsigned);
! /* extern void free(char *); */
  extern char *getenv(char *);
  
  extern char *strcpy(char *, char *), *strcat(char *, char *), *strncpy(char *, char *, int);
***************
*** 138,144 ****
  extern int vfprintf();
  extern int sscanf();
  extern char *malloc(), *realloc();
! extern void free();
  extern char *getenv();
  
  extern int strcmp();
--- 138,144 ----
  extern int vfprintf();
  extern int sscanf();
  extern char *malloc(), *realloc();
! /* extern void free(); */
  extern char *getenv();
  
  extern int strcmp();
***************
*** 547,556 ****
  extern	NODE **get_field(int, int);
  extern	NODE **get_lhs(NODE *, int);
  extern	void do_deref(void );
- extern	struct search *assoc_scan(NODE *);
  #ifndef	SNMP
  extern	struct search *assoc_next(struct search *);
  #else	SNMP
  extern  struct search *assoc_next(NODE *symbol, struct search *lookat);
  #endif	SNMP
  extern	NODE **assoc_lookup(NODE *, NODE *);
--- 547,557 ----
  extern	NODE **get_field(int, int);
  extern	NODE **get_lhs(NODE *, int);
  extern	void do_deref(void );
  #ifndef	SNMP
+ extern	struct search *assoc_scan(NODE *);
  extern	struct search *assoc_next(struct search *);
  #else	SNMP
+ extern struct search *assoc_scan(NODE * symbol, NODE *instance);
  extern  struct search *assoc_next(NODE *symbol, struct search *lookat);
  #endif	SNMP
  extern	NODE **assoc_lookup(NODE *, NODE *);
***************
*** 651,657 ****
  int snmp_get(NODE *ptr, char *instname);
  void snmp_set(void);
  char *snmp_name(NODE *ptr);
! struct search *snmp_assoc_scan(NODE *symbol);
  struct search *snmp_assoc_next(struct search *lookat, int done);
  #else
  int	check_snmp ();
--- 652,658 ----
  int snmp_get(NODE *ptr, char *instname);
  void snmp_set(void);
  char *snmp_name(NODE *ptr);
! struct search *snmp_assoc_scan(NODE *symbol, NODE *instance);
  struct search *snmp_assoc_next(struct search *lookat, int done);
  #else
  int	check_snmp ();
*** :debug.c	Sat Aug 31 23:04:43 1991
--- debug.c	Sat Dec  7 14:50:12 1991
***************
*** 115,121 ****
  		       ptr -> magic ? " {SNMP}": "");
  		if (ptr -> magic)
  		    return;
! 		for (l = assoc_scan(ptr); l; l = assoc_next(ptr, l)) {
  #endif
  			printf("\tindex: ");
  			print_parse_tree(l->retval);
--- 115,121 ----
  		       ptr -> magic ? " {SNMP}": "");
  		if (ptr -> magic)
  		    return;
! 		for (l = assoc_scan(ptr, (NODE *) 0); l; l = assoc_next(ptr, l)) {
  #endif
  			printf("\tindex: ");
  			print_parse_tree(l->retval);
*** :eval.c	Sat Aug 31 23:04:44 1991
--- eval.c	Sat Dec  7 14:46:40 1991
***************
*** 314,320 ****
  #else
  		for (l = assoc_scan (t, tree -> forloop -> cond);
  			    l;
! 			    l = assoc_next (t, l)) {
  #endif
  			deref = *((NODE **) lhs);
  			do_deref();
--- 314,320 ----
  #else
  		for (l = assoc_scan (t, tree -> forloop -> cond);
  			    l;
! 			    l = assoc_next (t, (struct search *) l)) {
  #endif
  			deref = *((NODE **) lhs);
  			do_deref();
***************
*** 333,339 ****
  			case TAG_BREAK:
  #ifdef	SNMP
  				if (t -> magic)
! 				    (void) snmp_assoc_next (l, 1);
  #endif
  				RESTORE_BINDING(loop_tag_stack, loop_tag, loop_tag_valid);
  				field_num = -1;
--- 333,339 ----
  			case TAG_BREAK:
  #ifdef	SNMP
  				if (t -> magic)
! 				    (void) snmp_assoc_next ((struct search *) l, 1);
  #endif
  				RESTORE_BINDING(loop_tag_stack, loop_tag, loop_tag_valid);
  				field_num = -1;
