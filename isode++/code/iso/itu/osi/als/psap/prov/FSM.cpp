/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : PSAP.sm
 */

#include "als/psap/prov/Provider.h"
#include ".\FSM.h"

using namespace statemap;

namespace ALS
{
    namespace PSAP
    {
        namespace PROV
        {

            void ProviderState::AC(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::ACA(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::ARP(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::ARU(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::CP(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::CPA(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::CPR(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTDind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTDreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTDrsp(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTEreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTErsp(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTIreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTIrsp(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTRreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ACTSreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ALTERreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_ALTERrsp(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_CDreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_CDrsp(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_CGreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_CONcnf(FSM& context, bool accept)
            {
                Default(context);
                return;
            }

            void ProviderState::P_CONreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_DTreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_EXreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_GTreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_PTreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_RELreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_RELrsp(FSM& context, bool accept)
            {
                Default(context);
                return;
            }

            void ProviderState::P_RSYNreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_RSYNrsp(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_SYNMreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_SYNMrsp(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_SYNmreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_SYNmrsp(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_TDreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_UABreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::P_UERreq(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::RS(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::RSA(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_ACTDcnf(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_ACTDind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_ACTEcnf(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_ACTEind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_ACTIcnf(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_ACTIind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_ACTRind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_ACTSind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_CGind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_CONcnf(FSM& context, bool accept)
            {
                Default(context);
                return;
            }

            void ProviderState::S_GTind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_PABind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_PERind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_PTind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_RELcnf(FSM& context, bool accept)
            {
                Default(context);
                return;
            }

            void ProviderState::S_RELind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_SYNMcnf(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_SYNMind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_SYNmcnf(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_SYNmind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::S_UERind(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::TC(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::TCC(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::TD(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::TE(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::TTD(FSM& context)
            {
                Default(context);
                return;
            }

            void ProviderState::Default(FSM& context)
            {
                throw (
                    TransitionUndefinedException(
                        context.getState().getName(),
                        context.getTransition()));

                return;
            }

            void STATE_STAI0::CP(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("CP");

                if (ctxt.p01()&&ctxt.p02()&&ctxt.p03()&&ctxt.p22())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI2);
            ctxt.sa01();
            ctxt.sa02();
            ctxt.sa20();
            ctxt.P_CONind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p01()||!ctxt.p02()||!ctxt.p22())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.sa01();
            ctxt.CPR();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::CP(context);
                }

                return;
            }

            void STATE_STAI0::P_CONreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CONreq");

                if (ctxt.p02()&&ctxt.p03())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI1);
            ctxt.sa04();
            ctxt.sa05();
            ctxt.sa02();
            ctxt.sa20();
            ctxt.CP();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CONreq(context);
                }

                return;
            }

            void STATE_STAI1::ARP(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARP");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAI1::ARU(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARU");

                if (ctxt.p03()&&ctxt.p21())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_UABind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::ARU(context);
                }

                return;
            }

            void STATE_STAI1::CPA(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("CPA");

                if (ctxt.p04())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa03();
            ctxt.sa12();
            ctxt.P_CONcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::CPA(context);
                }

                return;
            }

            void STATE_STAI1::CPR(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("CPR");

                if (ctxt.p04())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_CONcnf(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::CPR(context);
                }

                return;
            }

            void STATE_STAI1::P_UABreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UABreq");

                if (ctxt.p03())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.ARU();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UABreq(context);
                }

                return;
            }

            void STATE_STAI1::S_CONcnf(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_CONcnf");

                if (!accept)
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_CONcnf(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_CONcnf(context, accept);
                }

                return;
            }

            void STATE_STAI1::S_PABind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PABind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAI2::ARP(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARP");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAI2::ARU(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARU");

                if (ctxt.p03()&&ctxt.p21()&&ctxt.p23())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_UABind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::ARU(context);
                }

                return;
            }

            void STATE_STAI2::P_CONcnf(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CONcnf");

                if ( accept&&ctxt.p04())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa06();
            ctxt.sa12();
            ctxt.CPA();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p04())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.sa06();
            ctxt.CPR();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_CONcnf(context, accept);
                }

                return;
            }

            void STATE_STAI2::P_UABreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UABreq");

                if (ctxt.p03())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.ARU();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UABreq(context);
                }

                return;
            }

            void STATE_STAI2::S_PABind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PABind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAt0::AC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("AC");

                if (ctxt.p05()&&ctxt.p11())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa01();
            ctxt.sa09();
            ctxt.P_ALTERind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::AC(context);
                }

                return;
            }

            void STATE_STAt0::ARP(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARP");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAt0::ARU(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARU");

                if (ctxt.p05()&&ctxt.p21())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_UABind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::ARU(context);
                }

                return;
            }

            void STATE_STAt0::P_ACTDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTDreq");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTDreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTDreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTDreq(context);
                }

                return;
            }

            void STATE_STAt0::P_ACTDrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTDrsp");

                if (!ctxt.p17()||ctxt.p17()&&ctxt.p29())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa19();
            ctxt.S_ACTDrsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTDrsp(context);
                }

                return;
            }

            void STATE_STAt0::P_ACTEreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTEreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTEreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTEreq(context);
                }

                return;
            }

            void STATE_STAt0::P_ACTErsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTErsp");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa15();
            ctxt.S_ACTErsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTErsp(context);
                }

                return;
            }

            void STATE_STAt0::P_ACTIreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTIreq");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTIreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTIreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTIreq(context);
                }

                return;
            }

            void STATE_STAt0::P_ACTIrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTIrsp");

                if (!ctxt.p17()||ctxt.p29())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTIrsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTIrsp(context);
                }

                return;
            }

            void STATE_STAt0::P_ACTRreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTRreq");

                if ((!ctxt.p17()||ctxt.p27()||!ctxt.p28())&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTRreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p27()&&ctxt.p28()&&ctxt.p17()&&ctxt.p16())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa17();
            ctxt.sa16();
            ctxt.S_ACTRreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTRreq(context);
                }

                return;
            }

            void STATE_STAt0::P_ACTSreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTSreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa17();
            ctxt.S_ACTSreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTSreq(context);
                }

                return;
            }

            void STATE_STAt0::P_ALTERreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ALTERreq");

                if (ctxt.p05()&&ctxt.p11())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa04();
            ctxt.AC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ALTERreq(context);
                }

                return;
            }

            void STATE_STAt0::P_CDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CDreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.TC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CDreq(context);
                }

                return;
            }

            void STATE_STAt0::P_CDrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CDrsp");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.TCC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CDrsp(context);
                }

                return;
            }

            void STATE_STAt0::P_CGreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CGreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_CGreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CGreq(context);
                }

                return;
            }

            void STATE_STAt0::P_DTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_DTreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.TD();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_DTreq(context);
                }

                return;
            }

            void STATE_STAt0::P_EXreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_EXreq");

                if (ctxt.p13())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.TE();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_EXreq(context);
                }

                return;
            }

            void STATE_STAt0::P_GTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_GTreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_GTreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_GTreq(context);
                }

                return;
            }

            void STATE_STAt0::P_PTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_PTreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_PTreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_PTreq(context);
                }

                return;
            }

            void STATE_STAt0::P_RELreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RELreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa08();
            ctxt.sa07();
            ctxt.S_RELreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_RELreq(context);
                }

                return;
            }

            void STATE_STAt0::P_RELrsp(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RELrsp");

                if ( accept&&ctxt.p05()&&!ctxt.p08())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.S_RELrsp(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( accept&&ctxt.p05()&&ctxt.p08())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.S_RELrsp(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.S_RELrsp(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RELrsp(context, accept);
                }

                return;
            }

            void STATE_STAt0::P_RSYNreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RSYNreq");

                if (!ctxt.p11()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p11()&&!ctxt.p17()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p11()&&ctxt.p17()&&ctxt.p19()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p11()&&ctxt.p17()&&ctxt.p26()&&ctxt.p18())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p11()&&!ctxt.p17()&&!ctxt.p19()&&ctxt.p26()&&ctxt.p15())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa18();
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RSYNreq(context);
                }

                return;
            }

            void STATE_STAt0::P_RSYNrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RSYNrsp");

                if (!ctxt.p11()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RSA();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p11()&&!ctxt.p17()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RSA();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p11()&&ctxt.p17()&&ctxt.p19()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RSA();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p11()&&ctxt.p17()&&ctxt.p26()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RSA();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p11()&&ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&& ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RSA();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RSYNrsp(context);
                }

                return;
            }

            void STATE_STAt0::P_SYNMreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNMreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_SYNMreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNMreq(context);
                }

                return;
            }

            void STATE_STAt0::P_SYNMrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNMrsp");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_SYNMrsp();
            ctxt.sa22();
            ctxt.sa13();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNMrsp(context);
                }

                return;
            }

            void STATE_STAt0::P_SYNmreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNmreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_SYNmreq();
            ctxt.sa13();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNmreq(context);
                }

                return;
            }

            void STATE_STAt0::P_SYNmrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNmrsp");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_SYNmrsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNmrsp(context);
                }

                return;
            }

            void STATE_STAt0::P_TDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_TDreq");

                if (ctxt.p05()&&ctxt.p14())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.TTD();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_TDreq(context);
                }

                return;
            }

            void STATE_STAt0::P_UABreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UABreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.ARU();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UABreq(context);
                }

                return;
            }

            void STATE_STAt0::P_UERreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UERreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_UERreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UERreq(context);
                }

                return;
            }

            void STATE_STAt0::RS(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("RS");

                if (!ctxt.p11()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p11()&&!ctxt.p17()&&ctxt.p21())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p11()&&ctxt.p17()&&ctxt.p19()&&ctxt.p21())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p11()&&ctxt.p17()&&ctxt.p26()&&ctxt.p18())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa16();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p11()&&!ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&&ctxt.p15())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa18();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::RS(context);
                }

                return;
            }

            void STATE_STAt0::RSA(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("RSA");

                if (!ctxt.p11()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_RSYNcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p11()&&!ctxt.p17()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa21();
            ctxt.P_RSYNcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p11()&&ctxt.p17()&&ctxt.p19()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa21();
            ctxt.P_RSYNcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p11()&&ctxt.p17()&&ctxt.p26()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_RSYNcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p11()&&ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&& ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_RSYNcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::RSA(context);
                }

                return;
            }

            void STATE_STAt0::S_ACTDcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTDcnf");

                if (!ctxt.p17()||ctxt.p17()&&ctxt.p29())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa19();
            ctxt.P_ACTDcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTDcnf(context);
                }

                return;
            }

            void STATE_STAt0::S_ACTDind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTDind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa09();
            ctxt.P_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_ACTDind(context);
                }

                return;
            }

            void STATE_STAt0::S_ACTEcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTEcnf");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa19();
            ctxt.P_ACTEcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTEcnf(context);
                }

                return;
            }

            void STATE_STAt0::S_ACTEind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTEind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_ACTEind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTEind(context);
                }

                return;
            }

            void STATE_STAt0::S_ACTIcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTIcnf");

                if (!ctxt.p17()||ctxt.p29())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.P_ACTIcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTIcnf(context);
                }

                return;
            }

            void STATE_STAt0::S_ACTIind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTIind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa20();
            ctxt.P_ACTIind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa20();
            ctxt.P_ACTIind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_ACTIind(context);
                }

                return;
            }

            void STATE_STAt0::S_ACTRind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTRind");

                if ((!ctxt.p17()||ctxt.p27()||!ctxt.p28())&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_ACTRind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p27()&&ctxt.p28()&&ctxt.p17()&&ctxt.p16())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.sa17();
            ctxt.sa16();
            ctxt.P_ACTRind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_ACTRind(context);
                }

                return;
            }

            void STATE_STAt0::S_ACTSind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTSind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.sa17();
            ctxt.P_ACTSind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTSind(context);
                }

                return;
            }

            void STATE_STAt0::S_CGind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_CGind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_CGind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_CGind(context);
                }

                return;
            }

            void STATE_STAt0::S_GTind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_GTind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_GTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_GTind(context);
                }

                return;
            }

            void STATE_STAt0::S_PABind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PABind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAt0::S_PERind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PERind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAt0);
            ctxt.P_PERind();
                }
                catch (...)
                {
                    context.setState(context.STAt0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAt0::S_PTind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PTind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_PTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_PTind(context);
                }

                return;
            }

            void STATE_STAt0::S_RELcnf(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_RELcnf");

                if ( accept&&ctxt.p05()&&!ctxt.p08())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_RELcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( accept&&ctxt.p05()&&ctxt.p08())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.P_RELcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.P_RELcnf(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_RELcnf(context, accept);
                }

                return;
            }

            void STATE_STAt0::S_RELind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_RELind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa08();
            ctxt.sa07();
            ctxt.P_RELind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_RELind(context);
                }

                return;
            }

            void STATE_STAt0::S_SYNMcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNMcnf");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_SYNMcnf();
            ctxt.sa22();
            ctxt.sa13();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNMcnf(context);
                }

                return;
            }

            void STATE_STAt0::S_SYNMind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNMind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_SYNMind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNMind(context);
                }

                return;
            }

            void STATE_STAt0::S_SYNmcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNmcnf");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_SYNmcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNmcnf(context);
                }

                return;
            }

            void STATE_STAt0::S_SYNmind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNmind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_SYNmind();
            ctxt.sa13();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNmind(context);
                }

                return;
            }

            void STATE_STAt0::S_UERind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_UERind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_UERind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_UERind(context);
                }

                return;
            }

            void STATE_STAt0::TC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TC");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_CDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TC(context);
                }

                return;
            }

            void STATE_STAt0::TCC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TCC");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_CDcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TCC(context);
                }

                return;
            }

            void STATE_STAt0::TD(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TD");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_DTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TD(context);
                }

                return;
            }

            void STATE_STAt0::TE(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TE");

                if (ctxt.p13())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_EXind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TE(context);
                }

                return;
            }

            void STATE_STAt0::TTD(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TTD");

                if (ctxt.p05()&&ctxt.p14())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_TDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TTD(context);
                }

                return;
            }

            void STATE_STAac0::AC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("AC");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.sa01();
            ctxt.P_ALTERind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::AC(context);
                }

                return;
            }

            void STATE_STAac0::ACA(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ACA");

                if (ctxt.p09())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa10();
            ctxt.sa11();
            ctxt.P_ALTERcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::ACA(context);
                }

                return;
            }

            void STATE_STAac0::ARP(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARP");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac0::ARU(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARU");

                if (ctxt.p21()&&ctxt.p24())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_UABind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::ARU(context);
                }

                return;
            }

            void STATE_STAac0::P_ACTDind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTDind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.S_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa09();
            ctxt.S_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTDind(context);
                }

                return;
            }

            void STATE_STAac0::P_ACTDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTDreq");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTDreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTDreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTDreq(context);
                }

                return;
            }

            void STATE_STAac0::P_ACTEreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTEreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_ACTEreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTEreq(context);
                }

                return;
            }

            void STATE_STAac0::P_ACTErsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTErsp");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa14();
            ctxt.sa15();
            ctxt.S_ACTErsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTErsp(context);
                }

                return;
            }

            void STATE_STAac0::P_ACTIreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTIreq");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTIreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTIreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTIreq(context);
                }

                return;
            }

            void STATE_STAac0::P_ACTRreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTRreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_ACTRreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTRreq(context);
                }

                return;
            }

            void STATE_STAac0::P_ACTSreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTSreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_ACTSreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTSreq(context);
                }

                return;
            }

            void STATE_STAac0::P_CDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CDreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.TC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CDreq(context);
                }

                return;
            }

            void STATE_STAac0::P_CDrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CDrsp");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.TCC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CDrsp(context);
                }

                return;
            }

            void STATE_STAac0::P_CGreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CGreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_CGreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CGreq(context);
                }

                return;
            }

            void STATE_STAac0::P_DTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_DTreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.TD();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_DTreq(context);
                }

                return;
            }

            void STATE_STAac0::P_EXreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_EXreq");

                if (ctxt.p13())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.TE();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_EXreq(context);
                }

                return;
            }

            void STATE_STAac0::P_GTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_GTreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_GTreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_GTreq(context);
                }

                return;
            }

            void STATE_STAac0::P_PTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_PTreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_PTreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_PTreq(context);
                }

                return;
            }

            void STATE_STAac0::P_RELreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RELreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa08();
            ctxt.sa07();
            ctxt.S_RELreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_RELreq(context);
                }

                return;
            }

            void STATE_STAac0::P_RELrsp(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RELrsp");

                if ( accept&&ctxt.p07()&&!ctxt.p08())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.S_RELrsp(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( accept&&ctxt.p07()&&ctxt.p08())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.S_RELrsp(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p07())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa02();
            ctxt.S_RELrsp(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RELrsp(context, accept);
                }

                return;
            }

            void STATE_STAac0::P_RSYNreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RSYNreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p19()&&ctxt.p07())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p26()&&ctxt.p18())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&&ctxt.p15())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa18();
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RSYNreq(context);
                }

                return;
            }

            void STATE_STAac0::P_SYNMreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNMreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_SYNMreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNMreq(context);
                }

                return;
            }

            void STATE_STAac0::P_SYNMrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNMrsp");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_SYNMrsp();
            ctxt.sa22();
            ctxt.sa13();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNMrsp(context);
                }

                return;
            }

            void STATE_STAac0::P_SYNmreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNmreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_SYNmreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNmreq(context);
                }

                return;
            }

            void STATE_STAac0::P_SYNmrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNmrsp");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.S_SYNmrsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNmrsp(context);
                }

                return;
            }

            void STATE_STAac0::P_TDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_TDreq");

                if (ctxt.p07()&&ctxt.p14())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.TTD();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_TDreq(context);
                }

                return;
            }

            void STATE_STAac0::P_UABreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UABreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.ARU();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UABreq(context);
                }

                return;
            }

            void STATE_STAac0::P_UERreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UERreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_UERreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UERreq(context);
                }

                return;
            }

            void STATE_STAac0::RS(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("RS");

                if (!ctxt.p17()&&ctxt.p21())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa21();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p19()&&ctxt.p21())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa21();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p26()&&ctxt.p18())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa16();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&&ctxt.p15())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa18();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::RS(context);
                }

                return;
            }

            void STATE_STAac0::S_ACTDind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTDind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.P_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa09();
            ctxt.P_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_ACTDind(context);
                }

                return;
            }

            void STATE_STAac0::S_ACTEcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTEcnf");

                if (!ctxt.p17()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_ACTEcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTEcnf(context);
                }

                return;
            }

            void STATE_STAac0::S_ACTEind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTEind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_ACTEind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTEind(context);
                }

                return;
            }

            void STATE_STAac0::S_ACTIind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTIind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa20();
            ctxt.P_ACTIind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa20();
            ctxt.P_ACTIind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_ACTIind(context);
                }

                return;
            }

            void STATE_STAac0::S_ACTRind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTRind");

                if ((!ctxt.p17()||ctxt.p27()||!ctxt.p28())&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa09();
            ctxt.P_ACTRind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p27()&&ctxt.p28()&&ctxt.p17()&&ctxt.p16())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa09();
            ctxt.sa17();
            ctxt.sa16();
            ctxt.P_ACTRind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_ACTRind(context);
                }

                return;
            }

            void STATE_STAac0::S_ACTSind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTSind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa09();
            ctxt.sa17();
            ctxt.P_ACTSind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTSind(context);
                }

                return;
            }

            void STATE_STAac0::S_CGind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_CGind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_CGind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_CGind(context);
                }

                return;
            }

            void STATE_STAac0::S_GTind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_GTind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_GTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_GTind(context);
                }

                return;
            }

            void STATE_STAac0::S_PABind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PABind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac0::S_PERind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PERind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAt0);
            ctxt.P_PERind();
                }
                catch (...)
                {
                    context.setState(context.STAt0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac0::S_PTind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PTind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_PTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_PTind(context);
                }

                return;
            }

            void STATE_STAac0::S_RELcnf(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_RELcnf");

                if ( accept&&ctxt.p05()&&!ctxt.p08())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_RELcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( accept&&ctxt.p05()&&ctxt.p08())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.P_RELcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa02();
            ctxt.P_RELcnf(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_RELcnf(context, accept);
                }

                return;
            }

            void STATE_STAac0::S_RELind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_RELind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.sa08();
            ctxt.sa07();
            ctxt.P_RELind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_RELind(context);
                }

                return;
            }

            void STATE_STAac0::S_SYNMcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNMcnf");

                if (!ctxt.p17()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_SYNMcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNMcnf(context);
                }

                return;
            }

            void STATE_STAac0::S_SYNMind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNMind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_SYNMind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNMind(context);
                }

                return;
            }

            void STATE_STAac0::S_SYNmcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNmcnf");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_SYNmcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNmcnf(context);
                }

                return;
            }

            void STATE_STAac0::S_SYNmind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNmind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_SYNmind();
            ctxt.sa13();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNmind(context);
                }

                return;
            }

            void STATE_STAac0::S_UERind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_UERind");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_UERind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_UERind(context);
                }

                return;
            }

            void STATE_STAac0::TC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TC");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_CDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TC(context);
                }

                return;
            }

            void STATE_STAac0::TCC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TCC");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_CDcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TCC(context);
                }

                return;
            }

            void STATE_STAac0::TD(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TD");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_DTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TD(context);
                }

                return;
            }

            void STATE_STAac0::TE(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TE");

                if (ctxt.p13())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_EXind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TE(context);
                }

                return;
            }

            void STATE_STAac0::TTD(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TTD");

                if (ctxt.p05()&&ctxt.p14())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac0);
            ctxt.P_TDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TTD(context);
                }

                return;
            }

            void STATE_STAac1::ARP(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARP");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac1::ARU(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARU");

                if (ctxt.p06()&&ctxt.p21())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_UABind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::ARU(context);
                }

                return;
            }

            void STATE_STAac1::P_ACTDind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTDind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.S_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa09();
            ctxt.S_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTDind(context);
                }

                return;
            }

            void STATE_STAac1::P_ACTDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTDreq");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTDreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTDreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTDreq(context);
                }

                return;
            }

            void STATE_STAac1::P_ACTEreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTEreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_ACTEreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTEreq(context);
                }

                return;
            }

            void STATE_STAac1::P_ACTErsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTErsp");

                if (!ctxt.p17()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_ACTErsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTErsp(context);
                }

                return;
            }

            void STATE_STAac1::P_ACTIreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTIreq");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTIreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTIreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTIreq(context);
                }

                return;
            }

            void STATE_STAac1::P_ACTRreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTRreq");

                if ((!ctxt.p17()||ctxt.p27()||!ctxt.p28())&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_ACTRreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p27()&&ctxt.p28()&&ctxt.p17()&&ctxt.p16())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.sa17();
            ctxt.sa16();
            ctxt.S_ACTRreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTRreq(context);
                }

                return;
            }

            void STATE_STAac1::P_ACTSreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTSreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.sa17();
            ctxt.S_ACTSreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTSreq(context);
                }

                return;
            }

            void STATE_STAac1::P_ALTERreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ALTERreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.sa04();
            ctxt.AC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ALTERreq(context);
                }

                return;
            }

            void STATE_STAac1::P_ALTERrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ALTERrsp");

                if (ctxt.p09())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa06();
            ctxt.sa11();
            ctxt.ACA();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ALTERrsp(context);
                }

                return;
            }

            void STATE_STAac1::P_CDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CDreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.TC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CDreq(context);
                }

                return;
            }

            void STATE_STAac1::P_CDrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CDrsp");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.TCC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CDrsp(context);
                }

                return;
            }

            void STATE_STAac1::P_CGreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CGreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_CGreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CGreq(context);
                }

                return;
            }

            void STATE_STAac1::P_DTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_DTreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.TD();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_DTreq(context);
                }

                return;
            }

            void STATE_STAac1::P_EXreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_EXreq");

                if (ctxt.p13())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.TE();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_EXreq(context);
                }

                return;
            }

            void STATE_STAac1::P_GTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_GTreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_GTreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_GTreq(context);
                }

                return;
            }

            void STATE_STAac1::P_PTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_PTreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_PTreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_PTreq(context);
                }

                return;
            }

            void STATE_STAac1::P_RELreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RELreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.sa08();
            ctxt.sa07();
            ctxt.S_RELreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_RELreq(context);
                }

                return;
            }

            void STATE_STAac1::P_RELrsp(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RELrsp");

                if ( accept&&ctxt.p05()&&!ctxt.p08())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.S_RELrsp(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( accept&&ctxt.p05()&&ctxt.p08())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.S_RELrsp(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.sa02();
            ctxt.S_RELrsp(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RELrsp(context, accept);
                }

                return;
            }

            void STATE_STAac1::P_RSYNreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RSYNreq");

                if (!ctxt.p17()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p19()&&ctxt.p05())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p26()&&ctxt.p18())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&&ctxt.p15())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa18();
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RSYNreq(context);
                }

                return;
            }

            void STATE_STAac1::P_SYNMreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNMreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_SYNMreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNMreq(context);
                }

                return;
            }

            void STATE_STAac1::P_SYNMrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNMrsp");

                if (!ctxt.p17()&&ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_SYNMrsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNMrsp(context);
                }

                return;
            }

            void STATE_STAac1::P_SYNmreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNmreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_SYNmreq();
            ctxt.sa13();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNmreq(context);
                }

                return;
            }

            void STATE_STAac1::P_SYNmrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNmrsp");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.S_SYNmrsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNmrsp(context);
                }

                return;
            }

            void STATE_STAac1::P_TDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_TDreq");

                if (ctxt.p05()&&ctxt.p14())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.TTD();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_TDreq(context);
                }

                return;
            }

            void STATE_STAac1::P_UABreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UABreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.ARU();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UABreq(context);
                }

                return;
            }

            void STATE_STAac1::P_UERreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UERreq");

                if (ctxt.p05())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_UERreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UERreq(context);
                }

                return;
            }

            void STATE_STAac1::RS(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("RS");

                if (!ctxt.p17()&&ctxt.p21())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p19()&&ctxt.p21())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p26()&&ctxt.p18())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa16();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&&ctxt.p15())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa18();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::RS(context);
                }

                return;
            }

            void STATE_STAac1::S_ACTEcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTEcnf");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.sa14();
            ctxt.sa19();
            ctxt.P_ACTEcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTEcnf(context);
                }

                return;
            }

            void STATE_STAac1::S_ACTEind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTEind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_ACTEind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTEind(context);
                }

                return;
            }

            void STATE_STAac1::S_ACTIind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTIind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa20();
            ctxt.P_ACTIind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa20();
            ctxt.P_ACTIind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_ACTIind(context);
                }

                return;
            }

            void STATE_STAac1::S_ACTRind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTRind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_ACTRind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTRind(context);
                }

                return;
            }

            void STATE_STAac1::S_ACTSind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTSind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_ACTSind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTSind(context);
                }

                return;
            }

            void STATE_STAac1::S_CGind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_CGind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_CGind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_CGind(context);
                }

                return;
            }

            void STATE_STAac1::S_GTind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_GTind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_GTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_GTind(context);
                }

                return;
            }

            void STATE_STAac1::S_PABind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PABind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac1::S_PERind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PERind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAt0);
            ctxt.P_PERind();
                }
                catch (...)
                {
                    context.setState(context.STAt0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac1::S_PTind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PTind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_PTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_PTind(context);
                }

                return;
            }

            void STATE_STAac1::S_RELcnf(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_RELcnf");

                if ( accept&&ctxt.p06()&&!ctxt.p08())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_RELcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( accept&&ctxt.p06()&&ctxt.p08())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.P_RELcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p06())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.sa02();
            ctxt.P_RELcnf(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_RELcnf(context, accept);
                }

                return;
            }

            void STATE_STAac1::S_RELind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_RELind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.sa08();
            ctxt.sa07();
            ctxt.P_RELind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_RELind(context);
                }

                return;
            }

            void STATE_STAac1::S_SYNMcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNMcnf");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_SYNMcnf();
            ctxt.sa22();
            ctxt.sa13();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNMcnf(context);
                }

                return;
            }

            void STATE_STAac1::S_SYNMind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNMind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_SYNMind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNMind(context);
                }

                return;
            }

            void STATE_STAac1::S_SYNmcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNmcnf");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_SYNmcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNmcnf(context);
                }

                return;
            }

            void STATE_STAac1::S_SYNmind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNmind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_SYNmind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNmind(context);
                }

                return;
            }

            void STATE_STAac1::S_UERind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_UERind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_UERind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_UERind(context);
                }

                return;
            }

            void STATE_STAac1::TC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TC");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_CDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TC(context);
                }

                return;
            }

            void STATE_STAac1::TCC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TCC");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_CDcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TCC(context);
                }

                return;
            }

            void STATE_STAac1::TD(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TD");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_DTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TD(context);
                }

                return;
            }

            void STATE_STAac1::TE(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TE");

                if (ctxt.p13())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_EXind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TE(context);
                }

                return;
            }

            void STATE_STAac1::TTD(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TTD");

                if (ctxt.p06()&&ctxt.p14())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.P_TDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TTD(context);
                }

                return;
            }

            void STATE_STAac2::ACA(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ACA");

                if (ctxt.p09()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac1);
            ctxt.sa10();
            ctxt.sa11();
            ctxt.P_ALTERcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac1);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::ACA(context);
                }

                return;
            }

            void STATE_STAac2::ARP(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARP");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac2::ARU(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("ARU");

                if (ctxt.p21()&&ctxt.p25())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_UABind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::ARU(context);
                }

                return;
            }

            void STATE_STAac2::P_ACTDind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTDind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa09();
            ctxt.S_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa09();
            ctxt.S_ACTDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTDind(context);
                }

                return;
            }

            void STATE_STAac2::P_ACTDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTDreq");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTDreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTDreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTDreq(context);
                }

                return;
            }

            void STATE_STAac2::P_ACTEreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTEreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_ACTEreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTEreq(context);
                }

                return;
            }

            void STATE_STAac2::P_ACTErsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTErsp");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_ACTErsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTErsp(context);
                }

                return;
            }

            void STATE_STAac2::P_ACTIreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTIreq");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_ACTIreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.S_ACTIreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_ACTIreq(context);
                }

                return;
            }

            void STATE_STAac2::P_ACTRreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTRreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_ACTRreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTRreq(context);
                }

                return;
            }

            void STATE_STAac2::P_ACTSreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ACTSreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_ACTSreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ACTSreq(context);
                }

                return;
            }

            void STATE_STAac2::P_ALTERrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_ALTERrsp");

                if (ctxt.p09())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa06();
            ctxt.sa11();
            ctxt.ACA();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_ALTERrsp(context);
                }

                return;
            }

            void STATE_STAac2::P_CDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CDreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.TC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CDreq(context);
                }

                return;
            }

            void STATE_STAac2::P_CDrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CDrsp");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.TCC();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CDrsp(context);
                }

                return;
            }

            void STATE_STAac2::P_CGreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_CGreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_CGreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_CGreq(context);
                }

                return;
            }

            void STATE_STAac2::P_DTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_DTreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.TD();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_DTreq(context);
                }

                return;
            }

            void STATE_STAac2::P_EXreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_EXreq");

                if (ctxt.p13())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.TE();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_EXreq(context);
                }

                return;
            }

            void STATE_STAac2::P_GTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_GTreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_GTreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_GTreq(context);
                }

                return;
            }

            void STATE_STAac2::P_PTreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_PTreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_PTreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_PTreq(context);
                }

                return;
            }

            void STATE_STAac2::P_RELreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RELreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.sa08();
            ctxt.sa07();
            ctxt.S_RELreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_RELreq(context);
                }

                return;
            }

            void STATE_STAac2::P_RELrsp(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RELrsp");

                if ( accept&&ctxt.p07()&&!ctxt.p08())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.S_RELrsp(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( accept&&ctxt.p07()&&ctxt.p08())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.S_RELrsp(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p07())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.sa02();
            ctxt.S_RELrsp(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RELrsp(context, accept);
                }

                return;
            }

            void STATE_STAac2::P_RSYNreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_RSYNreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p19()&&ctxt.p07())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p26()&&ctxt.p18())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&&ctxt.p15())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa18();
            ctxt.RS();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::P_RSYNreq(context);
                }

                return;
            }

            void STATE_STAac2::P_SYNMreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNMreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_SYNMreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNMreq(context);
                }

                return;
            }

            void STATE_STAac2::P_SYNMrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNMrsp");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_SYNMrsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNMrsp(context);
                }

                return;
            }

            void STATE_STAac2::P_SYNmreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNmreq");

                if (!ctxt.p17()&&ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_SYNmreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNmreq(context);
                }

                return;
            }

            void STATE_STAac2::P_SYNmrsp(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_SYNmrsp");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.S_SYNmrsp();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_SYNmrsp(context);
                }

                return;
            }

            void STATE_STAac2::P_TDreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_TDreq");

                if (ctxt.p07()&&ctxt.p14())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.TTD();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_TDreq(context);
                }

                return;
            }

            void STATE_STAac2::P_UABreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UABreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.ARU();
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UABreq(context);
                }

                return;
            }

            void STATE_STAac2::P_UERreq(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("P_UERreq");

                if (ctxt.p07())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.S_UERreq();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::P_UERreq(context);
                }

                return;
            }

            void STATE_STAac2::RS(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("RS");

                if (!ctxt.p17()&&ctxt.p21())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa21();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p19()&&ctxt.p21())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa21();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&ctxt.p26()&&ctxt.p18())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa16();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( ctxt.p17()&&!ctxt.p19()&&!ctxt.p26()&&ctxt.p15())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa18();
            ctxt.P_RSYNind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::RS(context);
                }

                return;
            }

            void STATE_STAac2::S_ACTEcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTEcnf");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_ACTEcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTEcnf(context);
                }

                return;
            }

            void STATE_STAac2::S_ACTEind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTEind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_ACTEind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTEind(context);
                }

                return;
            }

            void STATE_STAac2::S_ACTIind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTIind");

                if (!ctxt.p17())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa20();
            ctxt.P_ACTIind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (ctxt.p17()&&ctxt.p29())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa14();
            ctxt.sa20();
            ctxt.P_ACTIind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_ACTIind(context);
                }

                return;
            }

            void STATE_STAac2::S_ACTRind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTRind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_ACTRind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTRind(context);
                }

                return;
            }

            void STATE_STAac2::S_ACTSind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_ACTSind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_ACTSind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_ACTSind(context);
                }

                return;
            }

            void STATE_STAac2::S_CGind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_CGind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_CGind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_CGind(context);
                }

                return;
            }

            void STATE_STAac2::S_GTind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_GTind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_GTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_GTind(context);
                }

                return;
            }

            void STATE_STAac2::S_PABind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PABind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAI0);
            ctxt.P_PABind();
                }
                catch (...)
                {
                    context.setState(context.STAI0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac2::S_PERind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PERind");

                (context.getState()).Exit(context);
                context.clearState();
                try
                {
                    context.setState(context.STAt0);
            ctxt.P_PERind();
                }
                catch (...)
                {
                    context.setState(context.STAt0);
                    throw;
                }
                (context.getState()).Entry(context);

                return;
            }

            void STATE_STAac2::S_PTind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_PTind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_PTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_PTind(context);
                }

                return;
            }

            void STATE_STAac2::S_RELcnf(FSM& context, bool accept)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_RELcnf");

                if ( accept&&ctxt.p06()&&!ctxt.p08())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAI0);
            ctxt.P_RELcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAI0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if ( accept&&ctxt.p06()&&ctxt.p08())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.sa02();
            ctxt.P_RELcnf(true);
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else if (!accept&&ctxt.p06())
            
    {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.sa02();
            ctxt.P_RELcnf(false);
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }                else
                {
                     STATE_Default::S_RELcnf(context, accept);
                }

                return;
            }

            void STATE_STAac2::S_RELind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_RELind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.sa08();
            ctxt.sa07();
            ctxt.P_RELind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_RELind(context);
                }

                return;
            }

            void STATE_STAac2::S_SYNMcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNMcnf");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_SYNMcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNMcnf(context);
                }

                return;
            }

            void STATE_STAac2::S_SYNMind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNMind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_SYNMind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNMind(context);
                }

                return;
            }

            void STATE_STAac2::S_SYNmcnf(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNmcnf");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_SYNmcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNmcnf(context);
                }

                return;
            }

            void STATE_STAac2::S_SYNmind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_SYNmind");

                if (!ctxt.p17()&&ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_SYNmind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_SYNmind(context);
                }

                return;
            }

            void STATE_STAac2::S_UERind(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("S_UERind");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAt0);
            ctxt.P_UERind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAt0);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::S_UERind(context);
                }

                return;
            }

            void STATE_STAac2::TC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TC");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_CDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TC(context);
                }

                return;
            }

            void STATE_STAac2::TCC(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TCC");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_CDcnf();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TCC(context);
                }

                return;
            }

            void STATE_STAac2::TD(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TD");

                if (ctxt.p06())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_DTind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TD(context);
                }

                return;
            }

            void STATE_STAac2::TE(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TE");

                if (ctxt.p13())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_EXind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TE(context);
                }

                return;
            }

            void STATE_STAac2::TTD(FSM& context)
            {
                Provider& ctxt = context.getOwner();
                context.setTransition("TTD");

                if (ctxt.p06()&&ctxt.p14())
                {
                    (context.getState()).Exit(context);
                    context.clearState();
                    try
                    {
                        context.setState(context.STAac2);
            ctxt.P_TDind();
                    }
                    catch (...)
                    {
                        context.setState(context.STAac2);
                        throw;
                    }
                    (context.getState()).Entry(context);
                }
                else
                {
                     STATE_Default::TTD(context);
                }

                return;
            }
        }
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
